name: Build and Push Docker Image

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Read version from file
      id: version
      run: |
        VERSION=$(cat version | tr -d '\n' | sed 's/^v//')
        echo "version=$VERSION" >> $GITHUB_OUTPUT
        echo "Found version: $VERSION"
        
    - name: Debug version
      run: |
        echo "Version from file: '${{ steps.version.outputs.version }}'"
        echo "Length: ${#VERSION}"
        if [ -z "${{ steps.version.outputs.version }}" ]; then
          echo "❌ Version is empty!"
        else
          echo "✅ Version is: ${{ steps.version.outputs.version }}"
        fi
        
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    - name: Login to GitHub Container Registry
      if: github.event_name != 'pull_request'
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ghcr.io/theinfamoustoto/hoyolab-auto
        tags: |
          type=raw,value=${{ steps.version.outputs.version }}
          type=raw,value=latest,enable={{is_default_branch}}
        
    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        platforms: linux/amd64,linux/arm64
        push: ${{ github.event_name != 'pull_request' }}
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
